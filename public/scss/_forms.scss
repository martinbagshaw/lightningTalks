// forms
.form {
    display: flex;
    align-items: flex-start;
    color: $black;
    font-family: $font-main;
    label, 
    p {
        font-size: 1.25rem;
        margin-bottom : 0.25rem;
    }
}
// main forms (login, signup, add talk)
.main-form {
    flex-direction: column;
    padding : 1rem;
    margin: 2rem 0;
    border-radius: 0.5rem;
    background-color: $white;
}
// search form (and autocomplete)
.search {
    &-form {
        flex-direction: column;
        margin-top: 2rem;
        position: relative;
    }
    &-container {
        width: 100%;
        position: relative;
    }
    &-suggestions {
        // margin-top: 1rem;
        // border-radius: 0.5rem;
        width: 100%;
        overflow: hidden;
        z-index: 1;
        position: absolute;
        // padding: 0.2rem;
        border-radius: 0.2rem;
        background-color: rgba( $black, .5 );
    }
    &-item {
        position: relative;
        margin-bottom: 0.2rem;
        padding: 0.75rem 1rem;
        text-align: left;
        border-radius: 0.35rem;
        cursor: pointer;
        font-size: 1.25rem;
        line-height: 1.8;
        background-color: $white;
        &:hover {
            background-color: $off-white;
        }
        &.past {
            background-color: $grey;
        }
        &.past:hover {
            background-color: $grey-hover;
        }
    }
    &-person {
        margin: 0 1rem;
        color: $grey;
        .past & {
            color: $off-white;
        }
    }
    &-arrow {
        position: absolute;
        right: 1rem;
        top: calc(50% - 18px);
        color: $grey;
        .past & {
            color: $off-white;
        }
    }
    
}








// ––––––––––––––––––––––––––––––––––––––––––––––––––
// text input
.text-input {
    font-family: $font-main;
    font-size: 1.5rem;
    width: 100%;
    display: block;
    margin-bottom: 0.75rem;
    padding: 0.75rem 0.5rem;
    border-radius: 0.5rem;
    border: 2px solid $red;
    // search bar
    &.search-bar {
        margin-bottom: 1rem;
        padding: 1.25rem 0.5rem;
        padding-right: 8rem;
    }
    &:focus,
    &:active,
    &:disabled {
        border: 2px solid $red-hover;
        background-color: $focus;
    }
    // text input - error
    &.error-red,
    &.error-red:focus {
        background-color : $red;
        border: 2px solid $red-hover;
        color: $white;
    }
    &.error-red::placeholder {
        color: $white;
    }
}






// ––––––––––––––––––––––––––––––––––––––––––––––––––
// button & input[type=submit]
// - reset
.button-input {
    padding: 0;
    border: 0;
    background: transparent;
    display: flex;
    a {
        color: $white;
        &:hover,
        &:focus {
            color: $white;
        }
    }
}

// input type submit
.button-submit {
    align-self: flex-end;
    font-family: $font-main;
    line-height: 1;
    letter-spacing: 0.05rem;
    font-size: 1.25rem;
    text-align: left;
    padding: 0.85rem;
    @media only screen and (min-width: 600px) {
        font-size: 1.5rem;
        padding: 1rem;
    }
    border: 0;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: background-color ease-in-out 0.3s;
    color: $white;
    background-color: $red;
    // search button
    &.search-button {
        position: absolute;
        top: 2px;
        right: 2px;
        padding: 1.25rem;
        border-radius: 0.35rem;
        font-size: 1.5rem;
    }
    &:hover,
    &:focus {
        background-color: $red-hover;
    }
}


// button colour mixin
// - works within .button-input
@mixin btnColour($name, $colour, $hover){
    &.#{$name} a {
        background-color: $colour;
        &:hover,
        &:focus {
            background-color: $hover;
        }
    }
}

// - check out tag in pages
.button-input {
    a {
        @extend .button-submit;
    }
    // icon buttons are higher
    &.has-icon a {
        line-height: 1.5;
    }
    @include btnColour('login', $green, $green-hover);
    @include btnColour('date-sort', $green, $green-hover);
    @include btnColour('history', $blue, $blue-hover);
    // toggle states
    &.descending a span {
        color: transparent;
        &:after {
            color: $white;
            position: absolute;
            right: 0;
            top: 0;
            line-height: 1;
        }
    }
    &.date-sort.descending a span:after {
        content: "↑";
    }
    &.history.descending a span:after {
        content: "→";
    }
}
// icons for button a only
.button-icon {
    font-size: 2.25rem;
    line-height: 0;
    vertical-align: middle;
    position: relative;
    margin-left: 0.5rem;
}














// ––––––––––––––––––––––––––––––––––––––––––––––––––
// checkbox input
.checkbox {
    // container
    &-row {
        margin-top: 1rem;
    }
    // individual container
    // - same style would apply to radio container
    &-label {
        display: block;
        position: relative;
        padding-left: 2.5rem;
        margin: 0 1rem 0 0;
        cursor: pointer;
        font-size: 1.5rem;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }
    // original input
    &-input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
        // checked state
        &:checked ~ .checkmark {
            background-color: $red;
            &:after {
                display: block;
            }
        }
    }
    // hover state
    &:hover .radio-input ~ .checkmark {
        background-color: $focus;
    }
}

// new custom input
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 2rem;
    width: 2rem;
    background-color: $off-white;
    // checkmark indicator
    &:after {
        content: "";
        position: absolute;
        display: none;
        content: "";
        top: 0.5rem;
        left: 0.75rem;
        width: 0.5rem;
        height: 1rem;
        border: solid $white;
        border-width: 0 0.25rem 0.25rem 0;
        transform: rotate(45deg);
    }
}


$tags : 'html', 'css', 'js', 'sql', 'node';   
$colour_codes : $html, $css, $js, $sql, $node;
@for $i from 1 through length($tags) {
    .checkbox-input.#{nth($tags, $i)}:checked ~ .checkmark {
        background-color : nth($colour_codes, $i);
    }
}